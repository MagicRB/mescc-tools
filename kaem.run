#!/usr/bin/env bash
# kaem build file for bootstrapping

# First build blood-elf
# Generate elf footer for debugging
/usr/bin/env blood-elf \
	-f ../mes/stage0/x86.M1 \
	-f ../mescc-tools-seed/blood-elf.M1 \
	-f ../mes-seed/libc+tcc-mes.M1 \
	-o blood-elf-blood-elf-footer.M1

# Assemble
/usr/bin/env M1 \
	--LittleEndian \
	--Architecture 1 \
	-f ../mes/stage0/x86.M1 \
	-f ../mes-seed/crt1.M1 \
	-f ../mes-seed/libc+tcc-mes.M1 \
	-f ../mescc-tools-seed/blood-elf.M1 \
	-f blood-elf-blood-elf-footer.M1 \
	-o blood-elf.hex2

# Link
/usr/bin/env hex2 \
	--LittleEndian \
	--Architecture 1 \
	--BaseAddress 0x1000000 \
	-f ../mes/stage0/elf32-header.hex2 \
	-f blood-elf.hex2 \
	-o blood-elf \
	--exec_enable

# Secondly build hex2-linker
# use our newly generated blood-elf to create the elf footer
./blood-elf \
	-f ../mescc-tools-seed/hex2.M1 \
	-o hex2-elf-footer.M1

# Assemble
/usr/bin/env M1 \
	--LittleEndian \
	--Architecture 1 \
	-f ../mes/stage0/x86.M1 \
	-f ../mes-seed/crt1.M1 \
	-f ../mes-seed/libc+tcc-mes.M1 \
	-f ../mescc-tools-seed/hex2.M1 \
	-f hex2-elf-footer.M1 \
	-o hex2.hex2

# Link
/usr/bin/env hex2 \
	--LittleEndian \
	--Architecture 1 \
	--BaseAddress 0x1000000 \
	-f ../mes/stage0/elf32-header.hex2 \
	-f hex2.hex2 \
	-o hex2 \
	--exec_enable

# Finally build M1-macro
# Generate elf footer for debugging
./blood-elf \
	-f ../mescc-tools-seed/M1.M1 \
	-f ../mes-seed/libc+tcc-mes.M1 \
	-o M1-blood-elf-footer.M1

# Assemble
/usr/bin/env M1 \
	--LittleEndian \
	--Architecture 1 \
	-f ../mes/stage0/x86.M1 \
	-f ../mes-seed/crt1.M1 \
	-f ../mes-seed/libc+tcc-mes.M1 \
	-f ../mescc-tools-seed/M1.M1 \
	-f M1-blood-elf-footer.M1 \
	-o M1.hex2

# Link
./hex2 \
	--LittleEndian \
	--Architecture 1 \
	--BaseAddress 0x1000000 \
	-f ../mes/stage0/elf32-header.hex2 \
	-f M1.hex2 \
	-o M1 \
	--exec_enable
